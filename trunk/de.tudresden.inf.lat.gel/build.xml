<?xml version="1.0" encoding="UTF-8" ?>
<project name="de.tudresden.inf.lat.gel" default="dist" basedir=".">

	<!--
 *
 * Copyright 2009 Julian Mendez
 *
 *
 * This file is part of jcel.
 *
 * jcel is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Lesser General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * jcel is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public License
 * along with jcel.  If not, see <http://www.gnu.org/licenses/>.
 *
 *
-->

	<!-- 
	For more information about this file, see http://ant.apache.org 
	-->

	<!-- Imports version properties. -->
	<property file="version.properties" />

	<!-- 

	The following version properties should be defined at this point : 
	  * version : has the version number of the form major.minor.patch 
	  * build.number : has the build number
	  * requiredjars : has a space-separated list of the jars required to compile the project and run the test cases

	Source directories: (src)
      * src/doc : text for the javadoc
      * src/main : source code of the main part
      * src/test : source code of the unit tests

    Generated directories: (dist)      
      * dist/bin : compiled classes
      * dist/javadoc : generated javadoc
      * dist/lib : generated jar file
      * dist/report : generated reports of unit tests
      * dist/test : compiled unit test classes

	-->

	<property name="dist.path" value="${basedir}/dist" />

	<property name="_src.doc.path" value="src/doc" />
	<property name="_src.main.path" value="src/main" />
	<property name="_src.test.path" value="src/test" />
	<property name="_src.appdata.path" value="src/data" />
	<property name="_jars.path" value="${basedir}" />
	<property name="_bundlejars.path" value="${basedir}" />
	<property name="_app.path" value="${dist.path}/app" />
	<property name="_javadoc.path" value="${dist.path}/javadoc" />
	<property name="_main.bin.path" value="${dist.path}/bin" />
	<property name="_prjlib.path" value="${dist.path}/lib" />
	<property name="_test.bin.path" value="${dist.path}/test" />
	<property name="_test.report.path" value="${dist.path}/report" />
	<property name="_zipfile.path" value="${basedir}/../${ant.project.name}-${version}.${build.number}.zip" />
	<property name="_debuglevel" value="lines,vars,source" />
	<property name="_bundle.path" value="${dist.path}/bundle" />
	<property name="_bundle.name" value="de.tudresden.inf.lat.gel" />
	<property name="_manifest.path" value="src/manifest/MANIFEST.MF" />
	<property name="_src.conf.path" value="src/conf" />
	
	<path id="libs.path">
		<fileset dir="${_jars.path}" includes="${requiredjars}" />
	</path>

	<patternset id="testclasses.patternset">
		<include name="**/*Test.java" />
	</patternset>

	<!-- Cleans everything. -->
	<target name="clean">
		<delete dir="${dist.path}" />
	</target>

	<!-- Compiles the whole project. -->
	<target name="build">
		<mkdir dir="${_main.bin.path}" />
		<javac srcdir="${_src.main.path}" destdir="${_main.bin.path}" classpathref="libs.path" debug="on" debuglevel="${_debuglevel}" />
	<!--	<mkdir dir="${_test.bin.path}" />
		<javac srcdir="${_src.test.path}" destdir="${_test.bin.path}" classpath="${_main.bin.path}" classpathref="libs.path" debug="on" debuglevel="${_debuglevel}" />-->
	</target>

	<!-- Performs the unit tests. -->
	<!--<target name="test" depends="build">
		<mkdir dir="${_test.report.path}" />
		<junit printsummary="on" haltonfailure="yes" fork="yes">
			<classpath>
				<pathelement path="${_main.bin.path}" />
				<pathelement path="${_test.bin.path}" />
				<fileset dir="${_jars.path}" includes="${requiredjars}" />
			</classpath>
			<formatter type="plain" usefile="on" />
			<batchtest fork="yes" todir="${_test.report.path}">
				<fileset dir="${_src.test.path}">
					<patternset refid="testclasses.patternset" />
				</fileset>
			</batchtest>
		</junit>
	</target>-->

	<!-- Creates the javadoc. -->
	<target name="javadoc">
		<mkdir dir="${_javadoc.path}" />
		<javadoc packagenames="*" sourcepath="${_src.doc.path}:${_src.main.path}" destdir="${_javadoc.path}" version="true" use="true" windowtitle="${ant.project.name}" overview="${_src.doc.path}/overview.html" classpathref="libs.path" access="package" />
	</target>

	<!-- Creates a jar with version number. -->
	<target name="jar" depends="build">
		<mkdir dir="${_prjlib.path}" />
		<jar destfile="${_prjlib.path}/${ant.project.name}-${version}.jar" basedir="${_main.bin.path}">
			<manifest>
				<attribute name="Main-Class" value="de.tudresden.inf.lat.gel.GelReasoner" />
				<attribute name="Class-Path" value="de.tudresden.inf.lat.jcel.core-0.12.0.jar de.tudresden.inf.lat.jcel.owlapi-0.12.0.jar owlapi-bin-3.2.2.jar" />
				<attribute name="Implementation-Title" value="${ant.project.name}" />
				<attribute name="Implementation-Version" value="${version}" />
			</manifest>
		</jar>
	</target>

	<!-- Copies the configuration files and the binaries. -->
	<target name="conf">
		<copy todir="${_main.bin.path}">
			<fileset dir="${_src.conf.path}" />
		</copy>
	</target>

	<!-- Creates the bundle. -->
	<target name="bundle" depends="build, conf">
		<mkdir dir="${_bundle.path}" />
		<jar destfile="${_bundle.path}/${_bundle.name}.jar" manifest="${_manifest.path}">
			<fileset dir="${_main.bin.path}" />
			<fileset dir="${_bundlejars.path}" includes="${bundlejars}" />
		</jar>
	</target>
	
	<!-- Creates a compressed file containing the whole project. -->
	<target name="zip">
		<delete file="${_zipfile.path}" />
		<zip destfile="${_zipfile.path}" basedir="${basedir}" />
	</target>

	<target name="dist" depends="clean, build, jar, bundle">
		<!--buildnumber file="version.properties"/-->
	</target>

</project>

